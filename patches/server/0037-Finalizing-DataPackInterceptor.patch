From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: derverdox <mail.ysp@web.de>
Date: Fri, 26 Jan 2024 15:24:46 +0100
Subject: [PATCH] Finalizing DataPackInterceptor


diff --git a/src/main/java/de/verdox/mccreativelab/CraftDataPackInterceptor.java b/src/main/java/de/verdox/mccreativelab/CraftDataPackInterceptor.java
index f663bb5878f5ad14f5ecb010868ce5326feb61be..186436b4e443256952a7755c0907b2f8e6a22d85 100644
--- a/src/main/java/de/verdox/mccreativelab/CraftDataPackInterceptor.java
+++ b/src/main/java/de/verdox/mccreativelab/CraftDataPackInterceptor.java
@@ -17,6 +17,7 @@ public class CraftDataPackInterceptor implements DataPackInterceptor {
     private final Set<PackAssetType> excludedTypes = new HashSet<>();
     private final Set<String> stringPatternExcludes = new HashSet<>();
     private final Map<PackAssetType, Set<Key>> exclusions = new HashMap<>();
+    private final Map<PackAssetType, Map<Key, List<Consumer<DataPackAsset>>>> modifies = new HashMap<>();
     private Consumer<DataPackAsset> installCallback;
 
     @Override
@@ -37,6 +38,12 @@ public class CraftDataPackInterceptor implements DataPackInterceptor {
         return this;
     }
 
+    @Override
+    public DataPackInterceptor modify(PackAssetType packAssetType, Key key, Consumer<DataPackAsset> consumer) {
+        modifies.computeIfAbsent(packAssetType, packAssetType1 -> new HashMap<>()).computeIfAbsent(key, key1 -> new LinkedList<>()).add(consumer);
+        return this;
+    }
+
     @Override
     public DataPackInterceptor onInstall(Consumer<DataPackAsset> installCallback) {
         this.installCallback = installCallback;
@@ -83,6 +90,14 @@ public class CraftDataPackInterceptor implements DataPackInterceptor {
 
             DataPackAsset dataPackAsset = new DataPackAsset(packAssetType, key, jsonObject);
 
+            if(modifies.containsKey(packAssetType)){
+                Map<Key, List<Consumer<DataPackAsset>>> map = modifies.get(packAssetType);
+                if(map.containsKey(key)){
+                    List<Consumer<DataPackAsset>> modifiers = map.get(key);
+                    modifiers.forEach(dataPackAssetConsumer -> dataPackAssetConsumer.accept(dataPackAsset));
+                }
+            }
+
             this.installCallback.accept(dataPackAsset);
 
             // Hier kannst du das JsonObject nach Belieben manipulieren
@@ -96,7 +111,7 @@ public class CraftDataPackInterceptor implements DataPackInterceptor {
             new IoSupplier<InputStream>() {
                 @Override
                 public InputStream get() throws IOException {
-                    return new ByteArrayInputStream(jsonString.getBytes("UTF-8"));
+                    return new ByteArrayInputStream(jsonObject.toString().getBytes("UTF-8"));
                 }
             };
 
