From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: derverdox <mail.ysp@web.de>
Date: Wed, 17 Jan 2024 17:14:32 +0100
Subject: [PATCH] Temp patch VanillaRegistryManipulator


diff --git a/src/main/java/de/verdox/mccreativelab/CreativeLabImpl.java b/src/main/java/de/verdox/mccreativelab/CreativeLabImpl.java
index c458c6d2b01ad827fb02aeff87a568cd41f77283..a5102aa4584692ab01ca0c2e90ee27cea533a27a 100644
--- a/src/main/java/de/verdox/mccreativelab/CreativeLabImpl.java
+++ b/src/main/java/de/verdox/mccreativelab/CreativeLabImpl.java
@@ -7,4 +7,10 @@ public final class CreativeLabImpl implements CreativeLab {
     public de.verdox.mccreativelab.data.DataPackInterceptor getDataPackInterceptor() {
         return dataPackInterceptor;
     }
+
+    private final de.verdox.mccreativelab.data.VanillaRegistryManipulator vanillaRegistryManipulator = new de.verdox.mccreativelab.data.CraftVanillaRegistryManipulator();
+    @Override
+    public de.verdox.mccreativelab.data.VanillaRegistryManipulator getRegistryManipulator() {
+        return vanillaRegistryManipulator;
+    }
 }
diff --git a/src/main/java/de/verdox/mccreativelab/data/CraftVanillaRegistryManipulator.java b/src/main/java/de/verdox/mccreativelab/data/CraftVanillaRegistryManipulator.java
new file mode 100644
index 0000000000000000000000000000000000000000..d6c19711ecc80abcbb64b02aec1dbb2aeb6d2283
--- /dev/null
+++ b/src/main/java/de/verdox/mccreativelab/data/CraftVanillaRegistryManipulator.java
@@ -0,0 +1,48 @@
+package de.verdox.mccreativelab.data;
+
+import net.kyori.adventure.sound.Sound;
+import net.minecraft.core.Registry;
+import net.minecraft.core.registries.BuiltInRegistries;
+import net.minecraft.resources.ResourceLocation;
+import net.minecraft.world.entity.ai.attributes.RangedAttribute;
+import net.minecraft.world.entity.ai.memory.MemoryModuleType;
+import net.minecraft.world.entity.npc.VillagerProfession;
+import org.bukkit.Material;
+import org.bukkit.NamespacedKey;
+import org.bukkit.PoiType;
+import org.bukkit.attribute.Attribute;
+import org.bukkit.block.data.BlockData;
+import org.bukkit.craftbukkit.util.CraftNamespacedKey;
+import org.bukkit.entity.Villager;
+import org.bukkit.entity.memory.MemoryKey;
+
+import java.util.Optional;
+import java.util.Set;
+import java.util.function.Predicate;
+
+public class CraftVanillaRegistryManipulator implements VanillaRegistryManipulator {
+    @Override
+    public RegistryEntryReference<Attribute> createAttribute(NamespacedKey namespacedKey, double defaultValue, double min, double max) {
+        ResourceLocation resourceLocation = CraftNamespacedKey.toMinecraft(namespacedKey);
+        var key = "attribute.name." + resourceLocation.getPath();
+        Registry.register(BuiltInRegistries.ATTRIBUTE, resourceLocation, new RangedAttribute(key, defaultValue, min, max));
+        return new RegistryEntryReference<>(namespacedKey, () -> Attribute.getAttribute(namespacedKey));
+    }
+
+    @Override
+    public <T> RegistryEntryReference<MemoryKey<T>> createMemoryKey(NamespacedKey namespacedKey, Class<? extends T> storedType) {
+        ResourceLocation resourceLocation = CraftNamespacedKey.toMinecraft(namespacedKey);
+        Registry.register(BuiltInRegistries.MEMORY_MODULE_TYPE, resourceLocation, new MemoryModuleType(Optional.empty()));
+        return (RegistryEntryReference<MemoryKey<T>>) new RegistryEntryReference<>(namespacedKey, () -> (T) MemoryKey.getByKey(namespacedKey));
+    }
+
+    @Override
+    public RegistryEntryReference<PoiType> createPoiType(NamespacedKey namespacedKey, Set<BlockData> states, int ticketCount, int searchDistance) {
+        return null;
+    }
+
+    @Override
+    public RegistryEntryReference<Villager.Profession> createProfession(NamespacedKey namespacedKey, Predicate<PoiType> heldWorkStation, Predicate<PoiType> acquirableWorkstation, Set<Material> gatherableItems, Set<Material> secondaryJobSites, Sound.Type workSound) {
+        return null;
+    }
+}
