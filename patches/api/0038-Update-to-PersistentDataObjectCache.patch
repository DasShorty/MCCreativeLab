From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: verdox <mail.ysp@web.de>
Date: Wed, 29 May 2024 15:21:22 +0000
Subject: [PATCH] Update to PersistentDataObjectCache


diff --git a/src/main/java/org/bukkit/persistence/PersistentDataObjectCache.java b/src/main/java/org/bukkit/persistence/PersistentDataObjectCache.java
index 319717bb8c26e73a6ff12a07490f8685addf162c..2ad5ccab7910ce446ce7aeff18c26a7d40256fb9 100644
--- a/src/main/java/org/bukkit/persistence/PersistentDataObjectCache.java
+++ b/src/main/java/org/bukkit/persistence/PersistentDataObjectCache.java
@@ -4,6 +4,8 @@ import org.bukkit.NamespacedKey;
 import org.jetbrains.annotations.NotNull;
 import org.jetbrains.annotations.Nullable;
 
+import java.util.function.Supplier;
+
 /**
  * Holds persistent data objects that are serialized into a {@link PersistentDataContainer}
  */
@@ -11,12 +13,24 @@ public interface PersistentDataObjectCache {
     /**
      * Load or creates a persistent data object.
      * @param key the key of the persistent data object
-     * @param newObject the object that will be used if no object could be loaded. This object will be stored in the PersistentDataContainer
+     * @param newObjectSupplier A supplier supplying the object that will be used if no object could be loaded. This object will be stored in the PersistentDataContainer
+     * @return the persistent data object
+     * @param <T> the type of persistent data object
+     */
+    @NotNull
+    <T extends PersistentDataObject> T loadOrSupplyPersistentDataObject(@NotNull NamespacedKey key, Supplier<T> newObjectSupplier);
+
+    /**
+     * Load or creates a persistent data object.
+     * @param key the key of the persistent data object
+     * @param newObjectSupplier A supplier supplying the object that will be used if no object could be loaded. This object will be stored in the PersistentDataContainer
      * @return the persistent data object
      * @param <T> the type of persistent data object
      */
     @NotNull
-    <T extends PersistentDataObject> T loadOrCreatePersistentDataObject(@NotNull NamespacedKey key, T newObject);
+    default <T extends PersistentDataObject> T loadOrCreatePersistentDataObject(@NotNull NamespacedKey key, T newObjectSupplier){
+        return loadOrSupplyPersistentDataObject(key, () -> newObjectSupplier);
+    }
 
     /**
      * Loads a persistent data object.
