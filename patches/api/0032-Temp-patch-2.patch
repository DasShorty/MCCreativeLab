From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: derverdox <mail.ysp@web.de>
Date: Thu, 21 Mar 2024 18:04:19 +0100
Subject: [PATCH] Temp patch #2


diff --git a/src/main/java/de/verdox/mccreativelab/behaviour/ItemBehaviour.java b/src/main/java/de/verdox/mccreativelab/behaviour/ItemBehaviour.java
index 3c1510a9d56484e9792b6de7283e34d3cfe5925e..c450a68caa64ebceecdbd378ffd0e0a41622e735 100644
--- a/src/main/java/de/verdox/mccreativelab/behaviour/ItemBehaviour.java
+++ b/src/main/java/de/verdox/mccreativelab/behaviour/ItemBehaviour.java
@@ -171,6 +171,24 @@ public interface ItemBehaviour extends Behaviour {
         return BehaviourResult.Bool.DEFAULT_INSTANCE;
     }
 
+    /**
+     * Gets if the {@link ItemStack} fits inside container items like Shulker Boxes or Bundles
+     * @param stack - The ItemStack
+     * @return - true if it fits
+     */
+    default BehaviourResult.Bool canBreakWhenMaxDamage(ItemStack stack) {
+        return BehaviourResult.Bool.DEFAULT_INSTANCE;
+    }
+
+    /**
+     * Gets if the {@link ItemStack} can drop from an inventory on death
+     * @param stack - The ItemStack
+     * @return - true if it can drop
+     */
+    default BehaviourResult.Bool canDropOnDeath(ItemStack stack) {
+        return BehaviourResult.Bool.DEFAULT_INSTANCE;
+    }
+
     /**
      * Gets if the {@link ItemStack} is enchantable
      * @param stack - The ItemStack
diff --git a/src/main/java/de/verdox/mccreativelab/recipe/CustomItemData.java b/src/main/java/de/verdox/mccreativelab/recipe/CustomItemData.java
index f5d07da1b10cd0662c3caefb5a7b981433663a54..4e4f90467accd72db476394af814b4c29afacde1 100644
--- a/src/main/java/de/verdox/mccreativelab/recipe/CustomItemData.java
+++ b/src/main/java/de/verdox/mccreativelab/recipe/CustomItemData.java
@@ -8,22 +8,25 @@ import java.util.Objects;
 public record CustomItemData(Material material, int customModelData) {
     public ItemStack createStack() {
         var stack = new ItemStack(material);
-        stack.editMeta(meta -> meta.setCustomModelData(customModelData));
+        if (customModelData != 0)
+            stack.editMeta(meta -> meta.setCustomModelData(customModelData));
         return stack;
     }
 
     public boolean isSame(ItemStack stackToCheck) {
         if (!stackToCheck.getType().equals(material))
             return false;
-        if (customModelData == 0 && !stackToCheck.hasItemMeta())
-            return true;
-        return stackToCheck.getType().equals(material)
-            && stackToCheck.hasItemMeta()
-            && stackToCheck.getItemMeta().hasCustomModelData()
-            && stackToCheck.getItemMeta().getCustomModelData() == customModelData;
+        if (customModelData == 0)
+            return !stackToCheck.hasItemMeta() || !stackToCheck.getItemMeta().hasCustomModelData() || stackToCheck
+                .getItemMeta().getCustomModelData() == customModelData;
+        else
+            return stackToCheck.getType().equals(material)
+                && stackToCheck.hasItemMeta()
+                && stackToCheck.getItemMeta().hasCustomModelData()
+                && stackToCheck.getItemMeta().getCustomModelData() == customModelData;
     }
 
-    public static CustomItemData fromItemStack(ItemStack stack){
+    public static CustomItemData fromItemStack(ItemStack stack) {
         return new CustomItemData(stack.getType(), ItemStack.getCustomModelData(stack));
     }
 }
diff --git a/src/main/java/org/bukkit/Tag.java b/src/main/java/org/bukkit/Tag.java
index 1137a21afa0283fa3d391415e98171e3c160aa1f..17ed510a4e0703314aaca089ed0d41089f648d36 100644
--- a/src/main/java/org/bukkit/Tag.java
+++ b/src/main/java/org/bukkit/Tag.java
@@ -989,6 +989,7 @@ public interface Tag<T extends Keyed> extends Keyed {
     Tag<EntityType> ENTITY_TYPES_CAN_TURN_IN_BOATS = Bukkit.getTag(REGISTRY_ENTITY_TYPES, NamespacedKey.minecraft("can_turn_in_boats"), EntityType.class);
 
     // Paper start
+    String REGISTRY_BIOME = "worldgen/biome";
     String REGISTRY_GAME_EVENTS = "game_events";
 
     /**
