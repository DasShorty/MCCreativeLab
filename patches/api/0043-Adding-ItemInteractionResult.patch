From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: verdox <mail.ysp@web.de>
Date: Wed, 29 May 2024 15:49:30 +0000
Subject: [PATCH] Adding ItemInteractionResult


diff --git a/src/main/java/de/verdox/mccreativelab/InteractionResult.java b/src/main/java/de/verdox/mccreativelab/InteractionResult.java
index c2a38adb30a24ca03ce2a65d14a06c3e1b5d9711..db29a77d3e9b7137ea4ffac19420e51fbad01218 100644
--- a/src/main/java/de/verdox/mccreativelab/InteractionResult.java
+++ b/src/main/java/de/verdox/mccreativelab/InteractionResult.java
@@ -7,4 +7,20 @@ public enum InteractionResult {
     CONSUME_PARTIAL,
     PASS,
     FAIL;
+
+    public boolean consumesAction() {
+        return this == SUCCESS || this == CONSUME || this == CONSUME_PARTIAL || this == SUCCESS_NO_ITEM_USED;
+    }
+
+    public boolean shouldSwing() {
+        return this == SUCCESS || this == SUCCESS_NO_ITEM_USED;
+    }
+
+    public boolean indicateItemUse() {
+        return this == SUCCESS || this == CONSUME;
+    }
+
+    public static InteractionResult sidedSuccess(boolean swingHand) {
+        return swingHand ? SUCCESS : CONSUME;
+    }
 }
diff --git a/src/main/java/de/verdox/mccreativelab/ItemInteractionResult.java b/src/main/java/de/verdox/mccreativelab/ItemInteractionResult.java
new file mode 100644
index 0000000000000000000000000000000000000000..e08871feb78378853e3755950e7e4dbe10786a23
--- /dev/null
+++ b/src/main/java/de/verdox/mccreativelab/ItemInteractionResult.java
@@ -0,0 +1,28 @@
+package de.verdox.mccreativelab;
+
+public enum ItemInteractionResult {
+    SUCCESS,
+    CONSUME,
+    CONSUME_PARTIAL,
+    PASS_TO_DEFAULT_BLOCK_INTERACTION,
+    SKIP_DEFAULT_BLOCK_INTERACTION,
+    FAIL;
+
+    public boolean consumesAction() {
+        return this.result().consumesAction();
+    }
+
+    public static ItemInteractionResult sidedSuccess(boolean swingHand) {
+        return swingHand ? SUCCESS : CONSUME;
+    }
+
+    public InteractionResult result() {
+        return switch (this) {
+            case SUCCESS -> InteractionResult.SUCCESS;
+            case CONSUME -> InteractionResult.CONSUME;
+            case CONSUME_PARTIAL -> InteractionResult.CONSUME_PARTIAL;
+            case PASS_TO_DEFAULT_BLOCK_INTERACTION, SKIP_DEFAULT_BLOCK_INTERACTION -> InteractionResult.PASS;
+            case FAIL -> InteractionResult.FAIL;
+        };
+    }
+}
diff --git a/src/main/java/de/verdox/mccreativelab/behaviour/BlockBehaviour.java b/src/main/java/de/verdox/mccreativelab/behaviour/BlockBehaviour.java
index 2cdfedb483bdefe621c3425a31d1f4300775d442..5a12c987aab4d4eb8199d57bffcce5ce669a19f1 100644
--- a/src/main/java/de/verdox/mccreativelab/behaviour/BlockBehaviour.java
+++ b/src/main/java/de/verdox/mccreativelab/behaviour/BlockBehaviour.java
@@ -1,6 +1,7 @@
 package de.verdox.mccreativelab.behaviour;
 
 import de.verdox.mccreativelab.InteractionResult;
+import de.verdox.mccreativelab.ItemInteractionResult;
 import de.verdox.mccreativelab.MultiCustomBehaviour;
 import de.verdox.mccreativelab.random.VanillaRandomSource;
 import org.bukkit.Location;
@@ -171,7 +172,7 @@ public interface BlockBehaviour extends Behaviour {
      * @param rayTraceResult The interaction info
      * @return The result of this interaction
      */
-    default BehaviourResult.Object<InteractionResult> use(Block block, Player player, EquipmentSlot hand, RayTraceResult rayTraceResult) {
+    default BehaviourResult.Object<ItemInteractionResult> use(Block block, Player player, EquipmentSlot hand, RayTraceResult rayTraceResult) {
         return BehaviourResult.Object.DEFAULT_INSTANCE;
     }
 
