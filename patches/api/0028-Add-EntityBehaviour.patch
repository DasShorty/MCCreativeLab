From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: derverdox <mail.ysp@web.de>
Date: Fri, 12 Jan 2024 16:43:40 +0100
Subject: [PATCH] Add EntityBehaviour


diff --git a/src/main/java/de/verdox/mccreativelab/behaviour/entity/AgeableEntityBehaviour.java b/src/main/java/de/verdox/mccreativelab/behaviour/entity/AgeableEntityBehaviour.java
new file mode 100644
index 0000000000000000000000000000000000000000..c1fe314b1753cf3210a5d252fcc64da77d563a2e
--- /dev/null
+++ b/src/main/java/de/verdox/mccreativelab/behaviour/entity/AgeableEntityBehaviour.java
@@ -0,0 +1,7 @@
+package de.verdox.mccreativelab.behaviour.entity;
+
+import de.verdox.mccreativelab.behaviour.BehaviourResult;
+import org.bukkit.entity.Ageable;
+
+public interface AgeableEntityBehaviour<T extends Ageable> extends MobBehaviour<T> {
+}
diff --git a/src/main/java/de/verdox/mccreativelab/behaviour/entity/AnimalEntityBehaviour.java b/src/main/java/de/verdox/mccreativelab/behaviour/entity/AnimalEntityBehaviour.java
new file mode 100644
index 0000000000000000000000000000000000000000..d7c3b0bb550247b558d2c39e388bde8e7b5319e3
--- /dev/null
+++ b/src/main/java/de/verdox/mccreativelab/behaviour/entity/AnimalEntityBehaviour.java
@@ -0,0 +1,14 @@
+package de.verdox.mccreativelab.behaviour.entity;
+
+import de.verdox.mccreativelab.behaviour.BehaviourResult;
+import org.bukkit.entity.Animals;
+import org.bukkit.inventory.ItemStack;
+
+public interface AnimalEntityBehaviour<T extends Animals> extends AgeableEntityBehaviour<T> {
+    default BehaviourResult.Bool canMate(T entity, Animals other) {
+        return BehaviourResult.Bool.DEFAULT_INSTANCE;
+    }
+    default BehaviourResult.Bool isFood(T entity, ItemStack stack) {
+        return BehaviourResult.Bool.DEFAULT_INSTANCE;
+    }
+}
diff --git a/src/main/java/de/verdox/mccreativelab/behaviour/entity/EntityBehaviour.java b/src/main/java/de/verdox/mccreativelab/behaviour/entity/EntityBehaviour.java
new file mode 100644
index 0000000000000000000000000000000000000000..1003724e799f5ad676e9a003579915b12bc99e3d
--- /dev/null
+++ b/src/main/java/de/verdox/mccreativelab/behaviour/entity/EntityBehaviour.java
@@ -0,0 +1,29 @@
+package de.verdox.mccreativelab.behaviour.entity;
+
+import de.verdox.mccreativelab.behaviour.BehaviourResult;
+import org.bukkit.Location;
+import org.bukkit.NamespacedKey;
+import org.bukkit.entity.Entity;
+import org.bukkit.entity.Player;
+import org.bukkit.util.Vector;
+import org.jetbrains.annotations.Nullable;
+
+import java.util.List;
+import java.util.Map;
+
+public interface EntityBehaviour<T extends Entity> {
+    default BehaviourResult.Bool fireImmune(T entity) {
+        return BehaviourResult.Bool.DEFAULT_INSTANCE;
+    }
+    default BehaviourResult.Bool ignoreExplosion(T entity, Location explosionLocation, float radius, @Nullable Entity source, boolean explosionHasFire, Map<Player, Vector> hitPlayers, List<Location> hitBlocks) {
+        return BehaviourResult.Bool.DEFAULT_INSTANCE;
+    }
+
+    default BehaviourResult.Callback onTick(T entity){
+        return BehaviourResult.Callback.DEFAULT_INSTANCE;
+    }
+
+    default BehaviourResult.Bool canChangeDimensions(T entity) {
+        return BehaviourResult.Bool.DEFAULT_INSTANCE;
+    }
+}
diff --git a/src/main/java/de/verdox/mccreativelab/behaviour/entity/LivingEntityBehaviour.java b/src/main/java/de/verdox/mccreativelab/behaviour/entity/LivingEntityBehaviour.java
new file mode 100644
index 0000000000000000000000000000000000000000..b1dbe8fcd678a24bbd0e802405d8163ed185e7ac
--- /dev/null
+++ b/src/main/java/de/verdox/mccreativelab/behaviour/entity/LivingEntityBehaviour.java
@@ -0,0 +1,34 @@
+package de.verdox.mccreativelab.behaviour.entity;
+
+import de.verdox.mccreativelab.behaviour.BehaviourResult;
+import org.bukkit.entity.EntityType;
+import org.bukkit.entity.Item;
+import org.bukkit.entity.LivingEntity;
+
+public interface LivingEntityBehaviour<T extends LivingEntity> extends EntityBehaviour<T> {
+    /**
+     * This method is called to check if an entity is sensitive to water.
+     * If true the entity will receive damage
+     *
+     * @return A boolean result
+     */
+    default BehaviourResult.Bool isSensitiveToWater(T entity) {
+        return BehaviourResult.Bool.DEFAULT_INSTANCE;
+    }
+
+    default BehaviourResult.Object<Float> waterDamage(T entity) {
+        return BehaviourResult.Object.DEFAULT_INSTANCE;
+    }
+
+    default BehaviourResult.Void onItemPickup(T entity, Item item){
+        return BehaviourResult.Void.DEFAULT_INSTANCE;
+    }
+
+    default BehaviourResult.Bool canDisableShield(T entity) {
+        return BehaviourResult.Bool.DEFAULT_INSTANCE;
+    }
+
+    default BehaviourResult.Bool canAttackType(T entity, EntityType entityType) {
+        return BehaviourResult.Bool.DEFAULT_INSTANCE;
+    }
+}
diff --git a/src/main/java/de/verdox/mccreativelab/behaviour/entity/MobBehaviour.java b/src/main/java/de/verdox/mccreativelab/behaviour/entity/MobBehaviour.java
new file mode 100644
index 0000000000000000000000000000000000000000..0c126914a09492f89b6830b25e8a0af39ddbe684
--- /dev/null
+++ b/src/main/java/de/verdox/mccreativelab/behaviour/entity/MobBehaviour.java
@@ -0,0 +1,41 @@
+package de.verdox.mccreativelab.behaviour.entity;
+
+import de.verdox.mccreativelab.InteractionResult;
+import de.verdox.mccreativelab.behaviour.BehaviourResult;
+import org.bukkit.Material;
+import org.bukkit.entity.Cow;
+import org.bukkit.entity.EntityType;
+import org.bukkit.entity.Mob;
+import org.bukkit.entity.Player;
+import org.bukkit.inventory.EquipmentSlot;
+import org.bukkit.inventory.ItemStack;
+
+public interface MobBehaviour <T extends Mob> extends LivingEntityBehaviour<T> {
+    default BehaviourResult.Object<InteractionResult> mobInteract(T entity, Player player, EquipmentSlot hand){
+        return BehaviourResult.Object.DEFAULT_INSTANCE;
+    }
+
+    default BehaviourResult.Bool canFireProjectileWeapon(T entity, Material weapon) {
+        return BehaviourResult.Bool.DEFAULT_INSTANCE;
+    }
+
+    default BehaviourResult.Void ate(T entity) {
+        return BehaviourResult.Void.DEFAULT_INSTANCE;
+    }
+
+    default BehaviourResult.Bool canHoldItem(T entity, ItemStack stack) {
+        return BehaviourResult.Bool.DEFAULT_INSTANCE;
+    }
+
+    default BehaviourResult.Bool wantsToPickUp(T entity, ItemStack stack) {
+        return BehaviourResult.Bool.DEFAULT_INSTANCE;
+    }
+
+    default BehaviourResult.Bool removeWhenFarAway(T entity, double distanceSquared) {
+        return BehaviourResult.Bool.DEFAULT_INSTANCE;
+    }
+
+    default BehaviourResult.Bool canBeLeashed(T entity, Player player) {
+        return BehaviourResult.Bool.DEFAULT_INSTANCE;
+    }
+}
diff --git a/src/main/java/org/bukkit/entity/Entity.java b/src/main/java/org/bukkit/entity/Entity.java
index 1d0fd7ff8449f815a7d980af0b378181ea8bf8d8..7bc661ecfbea7951f27bc8749461a91b9da4e387 100644
--- a/src/main/java/org/bukkit/entity/Entity.java
+++ b/src/main/java/org/bukkit/entity/Entity.java
@@ -1064,6 +1064,17 @@ public interface Entity extends Metadatable, CommandSender, Nameable, Persistent
     float getYaw();
     // Paper end
 
+    // MCCreativeLab start - Add EntityBehaviour
+    /**
+     * Sets the custom behaviour for this entity
+     * @param entityTypeClass - The Entity Type class
+     * @param behaviour - The custom behaviour implementation
+     * @param <T> - The Bukkit Entity Type
+     * @param <B> - The EntityBehaviour Type
+     */
+    <T extends Entity, B extends de.verdox.mccreativelab.behaviour.entity.EntityBehaviour<T>> void setCustomEntityBehaviour(Class<? extends T> entityTypeClass, B behaviour);
+    boolean hasCustomEntityBehaviour();
+    // MCCreativeLab end - Add EntityBehaviour
     // Paper Start - Collision API
     /**
      * Checks for any collisions with the entity's bounding box at the provided location.
