package de.verdox.mccreativelab.util;

import java.util.HashMap;
import java.util.Map;

public class FontUtil {
    public static final Map<Character, Integer> width = new HashMap<>();
    static {
        // Füge die gegebenen Zeilen zur Map hinzu
        width.put('!', 2);
        width.put('"', 5);
        width.put('#', 6);
        width.put('$', 6);
        width.put('%', 6);
        width.put('&', 6);
        width.put('\'', 3);
        width.put('(', 5);
        width.put(')', 5);
        width.put('*', 5);
        width.put('+', 6);
        width.put(',', 2);
        width.put('-', 6);
        width.put('.', 2);
        width.put('/', 6);
        width.put('0', 6);
        width.put('1', 6);
        width.put('2', 6);
        width.put('3', 6);
        width.put('4', 6);
        width.put('5', 6);
        width.put('6', 6);
        width.put('7', 6);
        width.put('8', 6);
        width.put('9', 6);
        width.put(':', 2);
        width.put(';', 2);
        width.put('<', 5);
        width.put('=', 6);
        width.put('>', 5);
        width.put('?', 6);
        width.put('@', 7);
        width.put('A', 6);
        width.put('B', 6);
        width.put('C', 6);
        width.put('D', 6);
        width.put('E', 6);
        width.put('F', 6);
        width.put('G', 6);
        width.put('H', 6);
        width.put('I', 4);
        width.put('J', 6);
        width.put('K', 6);
        width.put('L', 6);
        width.put('M', 6);
        width.put('N', 6);
        width.put('O', 6);
        width.put('P', 6);
        width.put('Q', 6);
        width.put('R', 6);
        width.put('S', 6);
        width.put('T', 6);
        width.put('U', 6);
        width.put('V', 6);
        width.put('W', 6);
        width.put('X', 6);
        width.put('Y', 6);
        width.put('Z', 6);
        width.put('[', 4);
        width.put('\\', 6);
        width.put(']', 4);
        width.put('^', 6);
        width.put('_', 6);
        width.put('`', 3);
        width.put('a', 6);
        width.put('b', 6);
        width.put('c', 6);
        width.put('d', 6);
        width.put('e', 6);
        width.put('f', 5);
        width.put('g', 6);
        width.put('h', 6);
        width.put('i', 2);
        width.put('j', 6);
        width.put('k', 5);
        width.put('l', 3);
        width.put('m', 6);
        width.put('n', 6);
        width.put('o', 6);
        width.put('p', 6);
        width.put('q', 6);
        width.put('r', 6);
        width.put('s', 6);
        width.put('t', 4);
        width.put('u', 6);
        width.put('v', 6);
        width.put('w', 6);
        width.put('x', 6);
        width.put('y', 6);
        width.put('z', 6);
        width.put('{', 5);
        width.put('|', 2);
        width.put('}', 5);
        width.put('~', 7);
        width.put('¡', 2);
        width.put('¢', 4);
        width.put('£', 6);
        width.put('¤', 4);
        width.put('¥', 4);
        width.put('¦', 1);
        width.put('§', -1);
        width.put('¨', 3);
        width.put('©', 5);
        width.put('ª', 6);
        width.put('«', 6);
        width.put('¬', 6);
        width.put('®', 7);
        width.put('¯', 4);
        width.put('°', 7);
        width.put('±', 7);
        width.put('²', 6);
        width.put('³', 3);
        width.put('´', 2);
        width.put('µ', 3);
        width.put('¶', 4);
        width.put('·', 6);
        width.put('¸', 2);
        width.put('¹', 2);
        width.put('º', 6);
        width.put('»', 6);
        width.put('¼', 6);
        width.put('½', 6);
        width.put('¾', 4);
        width.put('¿', 6);
        width.put('À', 6);
        width.put('Á', 6);
        width.put('Â', 6);
        width.put('Ã', 4);
        width.put('Ä', 6);
        width.put('Å', 6);
        width.put('Æ', 6);
        width.put('Ç', 6);
        width.put('È', 6);
        width.put('É', 6);
        width.put('Ê', 6);
        width.put('Ë', 6);
        width.put('Ì', 3);
        width.put('Í', 4);
        width.put('Î', 3);
        width.put('Ï', 3);
        width.put('Ð', 4);
        width.put('Ñ', 6);
        width.put('Ò', 4);
        width.put('Ó', 6);
        width.put('Ô', 6);
        width.put('Õ', 6);
        width.put('Ö', 6);
        width.put('×', 4);
        width.put('Ø', 6);
        width.put('Ù', 4);
        width.put('Ú', 6);
        width.put('Û', 4);
        width.put('Ü', 6);
        width.put('Ý', 4);
        width.put('Þ', 4);
        width.put('ß', 6);
        width.put('à', 6);
        width.put('á', 6);
        width.put('â', 6);
        width.put('ã', 6);
        width.put('ä', 6);
        width.put('å', 6);
        width.put('æ', 6);
        width.put('ç', 6);
        width.put('è', 6);
        width.put('é', 6);
        width.put('ê', 6);
        width.put('ë', 6);
        width.put('ì', 3);
        width.put('í', 3);
        width.put('î', 6);
        width.put('ï', 4);
        width.put('ð', 4);
        width.put('ñ', 6);
        width.put('ò', 6);
        width.put('ó', 6);
        width.put('ô', 6);
        width.put('õ', 6);
        width.put('ö', 6);
        width.put('÷', 7);
        width.put('ø', 6);
        width.put('ù', 6);
        width.put('ú', 6);
        width.put('û', 6);
        width.put('ü', 6);
        width.put('ý', 4);
        width.put('þ', 3);
    }

    public static int calculateStringLength(String text) {
        int length = 0;
        for (char c : text.toCharArray()) {
            if (width.containsKey(c)) {
                length += width.get(c);
            } else {
                // Falls der Character nicht in der Map vorhanden ist, betrachte ihn als ein Zeichen lang
                length++;
            }
        }
        return length;
    }
}
